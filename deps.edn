;; Useful commands:

;; Start a socket REPL for Clojure/Java
;; clj -A:jvm:clj-socket

;; Run tests for Clojure/Java
;; clj -A:jvm:test:clj-test

;; Start a Node-based socket REPL for ClojureScript
;; clj -A:cljs-socket

;; Run tests for ClojureScript
;; clj -A:test:cljs-test

;; Run Eastwood on Clojure version of code:
;; clj -A:eastwood:test:check

{:paths ["src/main/clojure" "src/main/cljs" "src/main/cljc"]
 :deps {org.clojure/clojurescript {:mvn/version "1.10.520"}
        ;;org.clojure/clojurescript {:local/root "/Users/jafinger/clj/clojurescript"}
        }
 :aliases
 {;; - start a Clojure/Java Socket REPL on port 50505
  :clj-socket {:jvm-opts ["-Dclojure.server.repl={:port,50505,:accept,clojure.core.server/repl}"]}
  ;; start a Node-based ClojureScript socket REPL on port 50505
  :cljs-socket {:jvm-opts ["-Dclojure.server.repl={:port,50505,:accept,cljs.server.node/repl}"]}
  :jvm {:jvm-opts ["-XX:-OmitStackTraceInFastThrow"]}
  :test {:extra-paths ["src/test/clojure" "src/test/cljs" "src/test/cljc"]
         :extra-deps {org.clojure/test.check {:mvn/version "0.7.0"}}}
  :clj-test {:main-opts ["-e" "(require,'[clojure.test,:as,t],'clojure.core.rrb-vector-test,'clojure.core.rrb-vector-common-test),(t/run-tests,'clojure.core.rrb-vector-common-test),(t/run-tests,'clojure.core.rrb-vector-test)"]}
  :cljs-test {:main-opts ["-m" "cljs.main"
                          "-re" "node"
                          "-e" "(require,'[clojure.test,:as,t],'clojure.core.rrb-vector-test,'clojure.core.rrb-vector-common-test),(t/run-tests,'clojure.core.rrb-vector-common-test),(t/run-tests,'clojure.core.rrb-vector-test)"]}
  ;; Using collections-check requires these minimum
  ;; versions of Clojure and test.check
  :check {:extra-paths ["src/test_local/clojure"]
          :extra-deps {collection-check {:mvn/version "0.1.7"}
                       org.clojure/clojure {:mvn/version "1.7.0"}
                       org.clojure/test.check {:mvn/version "0.9.0"}}}
  ;; I have tried using cljs-test-runner for running clojure.test
  ;; tests in a modified version of core.rrb-vector, but my guess is
  ;; that since an older version of core.rrb-vector (version 0.0.11)
  ;; is in the transitive dependencies of the cljs-test-runner project
  ;; itself, that version conflicts with the version I am attempting
  ;; to test.  See
  ;; https://github.com/Olical/cljs-test-runner/issues/34
;;  :cljs-runner {:extra-deps {olical/cljs-test-runner {:mvn/version "3.7.0"}}
;;                :main-opts ["-m" "cljs-test-runner.main"
;;                            "-d" "src/test/cljs"]}
  :cljol {:extra-deps {cljol {:local/root "/Users/jafinger/clj/cljol"}
                       org.clojure/clojure {:mvn/version "1.7.0"}}}
;;  :cljol {:extra-deps {cljol {:git/url "https://github.com/jafingerhut/cljol"
;;                              :sha "f957e6f5e95544342885e803ead94df91567f0ef"}}}
  :cap {;; recommended options from README of
        ;; https://github.com/clojure-goes-fast/clj-async-profiler
        :jvm-opts ["-Djdk.attach.allowAttachSelf"
                   ;; I have trouble entering password for this from
                   ;; clj REPL.  Maybe clojure command instead of clj
                   ;; is better for this?
                   "-Djol.tryWithSudo=true"
                   "-XX:+UnlockDiagnosticVMOptions"
                   "-XX:+DebugNonSafepoints"]
        :extra-deps {com.clojure-goes-fast/clj-async-profiler
                     {:mvn/version "0.4.0"}}}
  :eastwood {:extra-deps {jonase/eastwood {:mvn/version "0.3.5"}}
             :main-opts ["-m" "eastwood.lint"
                         "{:source-paths,[\"src/main/clojure\"],:test-paths,[\"src/test/clojure\",\"src/test_local/clojure\"],:add-linters,[:unused-fn-args,:unused-locals,:unused-namespaces,:unused-private-vars],:exclude-linters,[:implicit-dependencies],:exclude-namespaces,[]}"]}

  ;; pull in specific versions of Clojure:
  :1.5    {:override-deps {org.clojure/clojure {:mvn/version "1.5.1"}}}
  :1.6    {:override-deps {org.clojure/clojure {:mvn/version "1.6.0"}}}
  :1.7    {:override-deps {org.clojure/clojure {:mvn/version "1.7.0"}}}
  :1.8    {:override-deps {org.clojure/clojure {:mvn/version "1.8.0"}}}
  :1.9    {:override-deps {org.clojure/clojure {:mvn/version "1.9.0"}}}
  :1.10.0 {:override-deps {org.clojure/clojure {:mvn/version "1.10.0"}}}
  :1.10   {:override-deps {org.clojure/clojure {:mvn/version "1.10.1"}}}
  :master {:override-deps {org.clojure/clojure {:mvn/version "1.11.0-master-SNAPSHOT"}}}}}
